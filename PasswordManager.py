# Project No-1 ->> PasswordManager
from cryptography.fernet import Fernet
import maskpass as mp

# we need to define the encryption key
# this key will be used to encrypt and decrypt your data
# the key is generated by fernet using the generate_key() method
# key = Fernet.generate_key()
# initializing and creating the fernet object with the key
# f = Fernet(key)
from FernetKey import KeyGenerator

print('''In the myth of Oedipus and the Sphinx, 
       the Sphinx would ask travelers to Thebes a riddle to determine if they could be killed: '
      '"What goes on two legs in the morning, four in the afternoon, and three in the evening?"
        Now put yourself in the shoes of Oedipus and answer the riddle ''')

count = 0
while True:
    master = mp.askpass(prompt='The answer will be your master password ', mask='*').lower()
    if master != 'oedipus':
        if count < 2:
            count += 1
            print('Your master password is wrong!!!')
            print('sorry you cannot add nor view the other passwords')
            print(f'Try Again you have {3 - count} more remaining attempts')
            continue
        else:
            print('Repeated wrong attempts on Master password')
            quit()
    else:
        break
# the correct answer to the riddle will give the correct password
fkey = KeyGenerator(master)
key = fkey.keygenerator()
f = Fernet(key)


def add():
    acc = input('Account type/Account name ')
    pasw = mp.askpass(prompt='Enter the password ',mask="#").encode()
    # the enocode function converts a string to a bytestring
    token = (f.encrypt(pasw)).decode()
    # the decode function converts the bytestring to string
    with open("D:/Passwords.txt", 'a') as fi:
        fi.write(f"{acc}|{token}\n")


def view():
    with open("D:/Passwords.txt", 'r') as fi:
        for line in fi.readlines():
            data = line.rstrip()
            user, token = data.split('|')
            passw = (f.decrypt(token)).decode()
            print(f"Account: {user} and password: {passw}")


while True:
    mode = input(
        'Choose your mode, do you want to add(type add for adding) password or view passwords(type view for viewing),to quit type q ').lower()
    if mode == 'q':
        break

    if mode == 'add':
        add()
    elif mode == 'view':
        view()
    else:
        print('Invalid mode')
        continue
